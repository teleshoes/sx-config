#!/usr/bin/perl
use strict;
use warnings;
use lib `dirname $0 | tr -d '\n'`;
use PhoneBackupUtils;
use Time::HiRes qw(time);

my $IPMAGIC_NAME = "sx";

sub getRelease();
sub getArch();

sub main(@){
  print "fetching release+arch\n";
  my $release = getRelease();
  my $arch = getArch();

  my $releaseMajMin = "$1.$2" if $release =~ /^(\d+)\.(\d+)/;
  die "ERROR: could not parse release $release\n" if not defined $releaseMajMin;

  my $repoURL = "https://repo.sailfishos.org/obs/sailfishos:/chum/${releaseMajMin}_${arch}";

  print "adding repo sailfishos-chum = $repoURL\n";
  run "ipmagic", $IPMAGIC_NAME, "-u", "root", "ssu", "rr", "sailfishos-chum";
  run "ipmagic", $IPMAGIC_NAME, "-u", "root", "ssu", "ar", "sailfishos-chum", $repoURL;
  run "ipmagic", $IPMAGIC_NAME, "-u", "root", "ssu", "ur";
}

sub getRelease(){
  my $out = `ipmagic $IPMAGIC_NAME -u root ssu release 2>/dev/null`;
  chomp $out;
  if($out =~ /^Device release is currently: (\d+[\.0-9]*)$/){
    return $1;
  }else{
    die "ERROR: could not read release from `ssu release`\n";
  }
}

sub getArch(){
  my $out = `ipmagic $IPMAGIC_NAME getconf LONG_BIT`;
  chomp $out;
  if($out =~ /^32$/){
    return "armv7hl";
  }elsif($out =~ /^64$/){
    return "aarch64";
  }else{
    die "ERROR: could not get instruction bit length to guess arch\n";
  }
}

&main(@ARGV);
