#!/usr/bin/perl
use strict;
use warnings;
use Cwd 'abs_path';

my $IPMAGIC_NAME = "sx";
my $USER = "nemo";

sub run(@);

my $BASE_DIR = "$ENV{HOME}/Code/sx";
my $BACKUP_DIR = "$BASE_DIR/backup";
my $EMPTY_COMMHISTORY_DB_DUMP = "$BASE_DIR/empty-commhistory-db";

my $COMM_TOOLS_DIR = "$BASE_DIR/comm-tools";
my $CMD_RECENT_COMM = "$COMM_TOOLS_DIR/recent-comm.pl";
my $CMD_SMS_DB_IMPORTER = "$COMM_TOOLS_DIR/sms_db_importer.py";

my $COMMHISTORY_DB_REMOTE_DIR = "/home/$USER/.local/share/commhistory";
my $MMS_PARTS_REMOTE_DIR = "/home/$USER/.local/share/commhistory/data";

my $MMS_MSG_REPO = "$BACKUP_DIR/backup-mms/repo";
my $MMS_PARTS_REPO = "$BACKUP_DIR/backup-mms/parts-repo";

my $USAGE = "Usage:
  $0 -h|--help
    print this message

  $0
    overwrite SMS/calls/MMS on `ipmagic $IPMAGIC_NAME`

  $0 -m|--print-mms-rsync
    print mms rsync command
";

sub main(@){
  my $command = undef;
  if(@_ == 1 and $_[0] =~ /^(-h|--help)$/){
    print "$USAGE\n";
    exit 0;
  }elsif(@_ == 1 and $_[0] =~ /^(-m|--print-mms-rsync)$/){
    shift;
    $command = "print-mms-rsync";
  }

  die $USAGE if @_ != 0;
  my $host = `ipmagic $IPMAGIC_NAME`;
  die "failed to get host" if $? != 0;
  chomp $host;

  if(defined $command){
    if($command eq "print-mms-rsync"){
      my @cmd = ("rsync", "-avP", "--exclude=.git",
        "$MMS_PARTS_REPO/",
        "$USER\@$host:$MMS_PARTS_REMOTE_DIR/"
      );
      print "@cmd\n";
      exit 0;
    }else{
      die "unknown command: $command\n";
    }
  }

  my $now = `date +'%Y-%m-%d_%s'`;
  chomp $now;

  my $commhistoryDb = "$BASE_DIR/recent-$now-commhistory.db";
  my $recentSms = "$BASE_DIR/recent-$now.sms";
  my $recentCalls = "$BASE_DIR/recent-$now.call";

  run "cat $EMPTY_COMMHISTORY_DB_DUMP | sqlite3 $commhistoryDb";
  run "$CMD_RECENT_COMM --sms > $recentSms";
  run "$CMD_RECENT_COMM --calls > $recentCalls";

  run "$CMD_SMS_DB_IMPORTER import-to-db-sms $commhistoryDb $recentSms";
  run "$CMD_SMS_DB_IMPORTER import-to-db-calls $commhistoryDb $recentCalls";
  run "$CMD_SMS_DB_IMPORTER import-to-db-mms $commhistoryDb $MMS_MSG_REPO $MMS_PARTS_REPO";

  my $remoteCommhistoryDb = "/tmp/recent-$now-commhistory.db";
  run "scp", $commhistoryDb, "$USER\@$host:$remoteCommhistoryDb";

  run "rsync", "-avP", "--exclude=.git",
    "$MMS_PARTS_REPO/",
    "$USER\@$host:$MMS_PARTS_REMOTE_DIR/";
  run "ssh", "root\@$host", "chown $USER.$USER -R $MMS_PARTS_REMOTE_DIR/";

  my $backupDir = "$COMMHISTORY_DB_REMOTE_DIR/commhistory-backup-$now";
  run "ssh", "root\@$host", "
    mkdir $backupDir && \
    chown $USER.$USER $backupDir && \
    mv $COMMHISTORY_DB_REMOTE_DIR/commhistory.db* $backupDir && \
    gzip $backupDir/commhistory.db*
    mv $remoteCommhistoryDb $COMMHISTORY_DB_REMOTE_DIR/commhistory.db && \
    chown $USER.$USER $COMMHISTORY_DB_REMOTE_DIR/commhistory.db && \
    echo success || ( echo FAILED TO REPLACE COMMHISTORY DB && exit 1 )
  ";

  print "RESTARTING PHONE! ok? [y/N] ";
  my $line = <STDIN>;
  if($line =~ /y|Y/){
    run "ssh", "root\@$host", "reboot";
  }
}

sub run(@){
  print "@_\n";
  system @_;
  die "\n\nERROR: command failed \"@_\"\n" if $? != 0;
}

&main(@ARGV);
