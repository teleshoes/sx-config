#!/usr/bin/perl
use strict;
use warnings;
use List::Util qw(uniq);

sub ipmagic($$@);
sub rsync($$@);
sub getAllParentDirs($);

my $IPMAGIC_NAME = "sx";
my $USER = "nemo";
my $COMM_TOOLS_DIR = "$ENV{HOME}/Code/sx/comm-tools";

my @HOME_RSYNC_INCLUDES = qw(
  .bashrc
  .gitconfig
  .gpg
  .profile
  .secrets
  .vimrc
  wifi.conf
  wifi-auto.conf

  .config/gehomesdk.config
  .config/ha.conf
  .config/midea.conf
  .config/predictit-markets.conf
  .config/tasmota.conf
  .config/wemo-devices.conf

  .cache/workouts/viewfit-workouts-json/***
  .cache/workouts/hr-cache-amazfish/***
  .cache/workouts/hr-cache-hrmon/***
  .cache/workouts/viewfit-workouts-combine
  .cache/workouts/viewfit-workouts-extra-info

  .config/qtemail/***
  .vim/***
  resolv/***
);
my @HOME_RSYNC_INCLUDE_PARENT_DIRS = sort(uniq(
  map {getAllParentDirs($_)} @HOME_RSYNC_INCLUDES)
);

my $USRLOCALBIN_LOCAL_DIR = "$ENV{HOME}/install/root-files/usr/local/bin";
my $USRLOCALBIN_REMOTE_DIR = "/usr/local/bin";
my @USRLOCALBIN_EXECS = qw(
  alarm
  gst-play
  ipmagic
  off-cmd
  term
  pulse-enable
  pulse-vol
  sshc
  vpn
);

my $HOMEBIN_LOCAL_DIR = "$ENV{HOME}/bin";
my $HOMEBIN_REMOTE_DIR = "/home/$USER/bin";
my @HOMEBIN_EXCLUDES = qw(
  alert-email
  bat
  chromium
  touchClick
);

my $RSYNCS_ARR = [
  robinhood => {
    user => $USER,
    src  => "$ENV{HOME}/.cache/robinhood/",
    dest => "/home/$USER/.cache/robinhood/",
    args => ["-avP"],
  },
  klomp_config => {
    user => $USER,
    src  => "$ENV{HOME}/.klomp/config-$IPMAGIC_NAME",
    dest => "/media/sdcard/phone/klomp/config",
    args => ["-avP"],
  },
  klomp_lib => {
    user => $USER,
    src  => "$ENV{HOME}/.klomp/lib-$IPMAGIC_NAME",
    dest => "/media/sdcard/phone/klomp/lib",
    args => ["-avP"],
  },
  ddr_videos => {
    user => $USER,
    src  => "$ENV{HOME}/DCIM/xddr/videos/good/",
    dest => "/media/sdcard/phone/ddr-videos/",
    args => ["-avP"],
  },
  sheet_shows_1080p => {
    user => $USER,
    src  => "$ENV{HOME}/Music/sheet_music/shows/sheet_1080p/",
    dest => "/media/sdcard/phone/sheet_music/shows/sheet_1080p/",
    args => ["-avP"],
  },
  sheet_shows_music => {
    user => $USER,
    src  => "$ENV{HOME}/Music/sheet_music/shows/music/",
    dest => "/media/sdcard/phone/sheet_music/shows/music/",
    args => ["-avP"],
  },
  sheet_trumpet => {
    user => $USER,
    src  => "$ENV{HOME}/Music/sheet_music/trumpet/",
    dest => "/media/sdcard/phone/sheet_music/trumpet/",
    args => ["-avP"],
  },
  alarms => {
    user => $USER,
    src  => "/usr/share/alarms/",
    dest => "/media/sdcard/phone/alarms/",
    args => ["-avP"],
  },
  sounds => {
    user => $USER,
    src  => "/usr/share/sounds/custom/",
    dest => "/media/sdcard/phone/sounds/",
    args => ["-avP"],
  },

  #transform symlinks to referent file/dir
  ipmagic_unsymlink => {
    user => $USER,
    src  => "$ENV{HOME}/.config/ipmagic/",
    dest => "/home/$USER/.config/ipmagic/",
    args => ["-avP", "-L"],
  },

  sms_db_importer => {
    user => "root",
    src  => "$COMM_TOOLS_DIR/sms_db_importer.py",
    dest => "$USRLOCALBIN_REMOTE_DIR/",
    args => ["-avP"],
  },
];

my %RSYNCS = @$RSYNCS_ARR;
my @RSYNC_NAME_ORDER = map {$$RSYNCS_ARR[$_]} grep {$_ % 2 == 0} (0..$#$RSYNCS_ARR);

my $INITIAL_USER_CMD = "
  echo ok
";
my $FINAL_USER_CMD = "
  echo ok
";

my $INITIAL_ROOT_CMD = "
  echo ok
";
my $FINAL_ROOT_CMD = "
  echo ok
";

sub run(@);

sub main(@){
  die "Usage: $0\n" if @_ > 0;

  print "making sure $IPMAGIC_NAME is ssh-able\n";
  ipmagic($IPMAGIC_NAME, $USER, "echo found $IPMAGIC_NAME!\n");
  die "failed" if $? != 0;

  print "\n\n===INITIAL COMMANDS\n";
  ipmagic($IPMAGIC_NAME, $USER, $INITIAL_USER_CMD);
  ipmagic($IPMAGIC_NAME, "root", $INITIAL_ROOT_CMD);

  print "\n\n===RSYNC /usr/local/bin FILES\n";
  my @usrlocalbinFiles = map {"$USRLOCALBIN_LOCAL_DIR/$_"} @USRLOCALBIN_EXECS;
  rsync($IPMAGIC_NAME, "root", "-avP", @usrlocalbinFiles, ":$USRLOCALBIN_REMOTE_DIR/");

  print "\n\n===RSYNC ~/bin FILES\n";
  rsync($IPMAGIC_NAME, $USER, "-avP", "$HOMEBIN_LOCAL_DIR/", ":$HOMEBIN_REMOTE_DIR/",
    map{"--exclude=$_"} @HOMEBIN_EXCLUDES);

  print "\n\n===RSYNC HOME FILES\n";
  rsync($IPMAGIC_NAME, $USER,
    "-avP",
    "-O", "--no-perms", "--executability",
    "--chown", "$USER:$USER",
    "$ENV{HOME}/",
    ":/home/$USER/",
    (map {"--include=$_"} @HOME_RSYNC_INCLUDE_PARENT_DIRS),
    (map {"--include=$_"} @HOME_RSYNC_INCLUDES),
    "--exclude=**",
  );
  rsync($IPMAGIC_NAME, "root",
    "-avP",
    "-O", "--no-perms", "--executability",
    "--chown", "root:root",
    "$ENV{HOME}/",
    ":/root/",
    (map {"--include=$_"} @HOME_RSYNC_INCLUDE_PARENT_DIRS),
    (map {"--include=$_"} @HOME_RSYNC_INCLUDES),
    "--exclude=**",
  );

  print "\n\n===RSYNC FILES\n";
  for my $rsyncName(@RSYNC_NAME_ORDER){
    my $rsyncInfo = $RSYNCS{$rsyncName};
    rsync($IPMAGIC_NAME, $$rsyncInfo{user},
      @{$$rsyncInfo{args}},
      "$$rsyncInfo{src}",
      ":$$rsyncInfo{dest}",
    );
  }

  print "\n\n===FINAL COMMANDS\n";
  ipmagic($IPMAGIC_NAME, $USER, $FINAL_USER_CMD);
  ipmagic($IPMAGIC_NAME, "root", $FINAL_ROOT_CMD);
}

sub ipmagic($$@){
  my ($ipmagicName, $user, @cmd) = @_;
  run "ipmagic", $ipmagicName, "-u", $user, "--sshc", @cmd;
}
sub rsync($$@){
  my ($ipmagicName, $user, @cmd) = @_;
  run "ipmagic", $ipmagicName, "-u", $user, "--sshc", "--rsync", @cmd;
}

# recursively list all parent dirs
#   -list up to root for abspaths
#   -list up to the first relative element for relpaths (do not add './' if not given)
#   -all dirs end in a trailing slash
#   -dirs do not need to exist and filesystem is not checked
#
# e.g.:   a/b/c    =>  a/b/, a/
#         /a/b/c   =>  /a/b/, /a/, /
#         /a/b/c/  =>  /a/b/, /a/, /
#         ./a      =>  ./
sub getAllParentDirs($){
  my ($path) = @_;
  my @dirs;
  $path =~ s/\/+$//; #remove trailing slashes on last path element
  while($path =~ /^(.+)\/[^\/]+$/){
    $path = $1;
    push @dirs, "$path/";
  }
  return @dirs;
}

sub run(@){
  print "@_\n";
  system @_;
  if($? != 0){
    die "ERROR: \"@_\" failed\n";
  }
}

&main(@ARGV);
