#!/usr/bin/perl
use strict;
use warnings;

sub run(@);

my $MAC = '00:22:D0:44:94:5A';

my $BLE_HRL_EXEC = "BLEHeartRateLogger.py";

my $LOG_FILE_LATEST = "$ENV{HOME}/.cache/logs/hrmon/latest";

my $USAGE = "Usage:
  $0 -h | --help
    show this message

  $0
  $0 --screen-daemon
    same as: 'screen-daemon hrmon'

  $0 --start | start
    run: screen-daemon hrmon --stop
    run: pkill -f $BLE_HRL_EXEC
    run: $BLE_HRL_EXEC -b -v -m $MAC

  $0 --stop | stop
    run: screen-daemon hrmon --stop
    run: pkill -f BLEHeartRateLogger.py

  $0 --get | get | -g | g
    get the latest value logged to '$LOG_FILE_LATEST'
";

my $CMD_SCREEN_DAEMON = "screen-daemon";
my $CMD_START = "start";
my $CMD_STOP = "stop";
my $CMD_GET = "get";

sub main(@){
  my $cmd = $CMD_SCREEN_DAEMON;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $USAGE;
      exit 0;
    }elsif($arg =~ /^(--screen-daemon)$/){
      $cmd = $CMD_SCREEN_DAEMON;
    }elsif($arg =~ /^(--start|start)$/){
      $cmd = $CMD_START;
    }elsif($arg =~ /^(--stop|stop)$/){
      $cmd = $CMD_STOP;
    }elsif($arg =~ /^(--get|get|-g|g)$/){
      $cmd = $CMD_GET;
    }else{
      die "$USAGE\nERROR: unknown arg $arg\n";
    }
  }

  if($cmd eq $CMD_SCREEN_DAEMON){
    exec "screen-daemon", "hrmon";
  }elsif($cmd eq $CMD_START){
    run "screen-daemon", "hrmon", "--stop";
    run "pkill", "-f", $BLE_HRL_EXEC;
    exec $BLE_HRL_EXEC, "-b", "-v", "-m", $MAC;
  }elsif($cmd eq $CMD_STOP){
    run "screen-daemon", "hrmon", "--stop";
    run "pkill", "-f", $BLE_HRL_EXEC;
  }elsif($cmd eq $CMD_GET){
    system "grep 'Heart rate' '$LOG_FILE_LATEST' | tail -1"
  }else{
    die "ERROR: unknown cmd $cmd\n"
  }
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
