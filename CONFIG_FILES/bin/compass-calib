#!/usr/bin/python
#compass-calib.py
#Copyright 2021 Elliot Wolk
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

from PyQt5.QtCore import *
from PyQt5.QtQuick import *
from PyQt5.QtWidgets import *

import os
import re
import sys
import tempfile

usage = """Usage:
  %(exec)s OPTS
    print compass dir and calibration level using QtSensors

  OPTS
    -g | --gui
      show a QT window with the same info
""" % {"exec": sys.argv[0]}

def main():
  gui = False
  if len(sys.argv) == 2 and (sys.argv[1] == "-g" or sys.argv[1] == "--gui"):
    gui = True
  elif len(sys.argv) > 1:
    print >> sys.stderr, usage
    sys.exit(2)

  os.environ['QT_QPA_PLATFORM']='wayland'
  os.environ['XDG_RUNTIME_DIR']='/run/user/100000'
  os.environ['WAYLAND_DISPLAY']='../../display/wayland-0'

  app = QApplication([])

  qml = """
      import QtQuick 2.0
      import QtSensors 5.0
      import Sailfish.Silica 1.0

      Item {
        id: main
        property string direction: ""
        property string azimuth: ""
        property string calibPct: ""

        Compass {
          active: true
          onReadingChanged: {
              var azimuth = reading.azimuth;
              var calib = reading.calibrationLevel

              var dirs = ["N ", "NE", "E ", "SE", "S ", "SW", "W ", "NW"]
              var dirIndex = Math.floor((azimuth + 22.5) % 360 / 45)
              var dir = dirs[dirIndex]

              if(azimuth < 10){
                azimuth = "  " + azimuth;
              }else if(azimuth < 100){
                azimuth = " " + azimuth;
              }

              var calibPct = Math.floor(calib * 100.0 + 0.5)
              if(calibPct < 10){
                calibPct = "  " + calibPct;
              }else if(calibPct < 100){
                calibPct = " " + calibPct;
              }

              main.direction = dir
              main.azimuth = azimuth
              main.calibPct = calibPct

              console.log(dir + " " + azimuth + "\u00B0 calib: " + calibPct + "%")
          }
        }
        Column{
          Row {
            Label {
              color: "black"
              font.family: "monospace"
              font.pixelSize: 160
              text: main.direction + " "
            }
            Label {
              color: "black"
              font.family: "monospace"
              font.pixelSize: 160
              text: main.azimuth + "\u00B0"
            }
          }
          Row {
            Label {
              color: "black"
              font.family: "monospace"
              font.pixelSize: 100
              text: "calib: " + main.calibPct + "%"
            }
          }
        }
      }
  """

  fd, qmlFile = tempfile.mkstemp(prefix="calib_", suffix=".qml")
  fh = open(qmlFile, 'w')
  fh.write(qml)
  fh.close()

  mainWindow = QQuickView()
  mainWindow.setSource(QUrl(qmlFile))

  if gui:
    mainWindow.show()

  app.exec_()

if __name__ == "__main__":
  sys.exit(main())
