#!/usr/bin/perl
use strict;
use warnings;

my $DCONF_KEY = "/lipstick/force_touch_input_disabled";

my $USAGE = "Usage:
  $0 -h | --help
    show this message

  $0
  $0 g | get
  $0 -g | --get
    read $DCONF_KEY
      -if value is 'true':  print DISABLED   $DCONF_KEY = <VALUE>
      -otherwise:           print ENABLED   $DCONF_KEY = <VALUE>

  $0 on | enable | enabled
  $0 --on | --enable | --enabled
    enable touch input in lipstick compositor
      -write false to $DCONF_KEY

  $0 off | disable | disabled
  $0 --off | --disable | --disabled
    disable touch input in lipstick compositor
      -write true to $DCONF_KEY
";

my $MODE_GET = "get";
my $MODE_SET = "set";

sub run(@);

sub main(@){
  my $mode = $MODE_GET;
  my $enable = undef;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $USAGE;
      exit 0;
    }elsif($arg =~ /^(g|get|-g|--get)$/){
      $mode = $MODE_GET;
    }elsif($arg =~ /^(--)?(on|enable|enabled)$/){
      $mode = $MODE_SET;
      $enable = 1;
    }elsif($arg =~ /^(--)?(off|disable|disabled)$/){
      $mode = $MODE_SET;
      $enable = 0;
    }else{
      die "$USAGE\nERROR: unknown arg $arg\n";
    }
  }

  if($mode eq $MODE_GET){
    my $val = `udo dconf read $DCONF_KEY`;
    chomp $val;
    print ($val eq 'true' ? "DISABLED" : "ENABLED");
    print "   $DCONF_KEY = $val\n";
  }elsif($mode eq $MODE_SET){
    die "ERROR: no value set\n" if not defined $enable;
    run "udo", "dconf", "write", $DCONF_KEY, ($enable ? "false" : "true");
  }else{
    die "ERROR: unknown mode $mode\n";
  }
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
