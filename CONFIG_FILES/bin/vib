#!/usr/bin/perl
use strict;
use warnings;
use File::Basename qw(basename);

sub getNgfdActive();
sub setNgfdActive($);

my $EXEC = basename $0;
my $VIBRATE_PY_EXEC = "vibrate.py";

my $USAGE = "Usage:
  $EXEC -h | --help
    show this message

  $EXEC DURATION_MILLIS
    run: $VIBRATE_PY_EXEC DURATION_MILLIS

  $EXEC
  $EXEC get | --get | -g
    run systemctl --user is-active ngfd
    print 'active' or 'inactive'

  $EXEC on | --on | enable | --enable
    run: systemctl --user restart ngfd

  $EXEC off | --off | disable | --disable
    run: systemctl --user stop ngfd

  $EXEC toggle | --toggle | -t
    -run: VAL=`$EXEC --get`
    -if VAL is 'active': run $EXEC --off
";

my $MODE_GET = "get";
my $MODE_ON = "on";
my $MODE_OFF = "off";
my $MODE_TOGGLE = "toggle";
my $MODE_VIB = "vib";

sub main(@){
  my $mode = $MODE_GET;
  my $durationMillis = undef;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $USAGE;
      exit 0;
    }elsif($arg =~ /^(\d+)$/){
      $mode = $MODE_VIB;
      $durationMillis = $1;
    }elsif($arg =~ /^(get|--get|-g)$/){
      $mode = $MODE_GET;
    }elsif($arg =~ /^(on|--on|enable|--enable)$/){
      $mode = $MODE_ON;
    }elsif($arg =~ /^(off|--off|disable|--disable)$/){
      $mode = $MODE_OFF;
    }elsif($arg =~ /^(toggle|--toggle|-t)$/){
      $mode = $MODE_TOGGLE;
    }else{
      die "$USAGE\nERROR: unknown arg $arg\n";
    }
  }

  if($mode eq $MODE_GET){
    print getNgfdActive() . "\n";
  }elsif($mode eq $MODE_ON){
    setNgfdActive(1);
  }elsif($mode eq $MODE_OFF){
    setNgfdActive(0);
  }elsif($mode eq $MODE_TOGGLE){
    setNgfdActive(getNgfdActive() ne "active");
  }elsif($mode eq $MODE_VIB){
    system $VIBRATE_PY_EXEC, $durationMillis;
  }else{
    die "ERROR: unknown mode $mode\n";
  }
}

sub getNgfdActive(){
  my $out = `systemctl --user is-active ngfd`;
  chomp $out;
  if($out =~ /^(active|inactive)$/){
    return $1;
  }else{
    die "ERROR: could not parse ngfd status '$out'\n";
  }
}
sub setNgfdActive($){
  my ($isActive) = @_;
  my $prev = getNgfdActive();
  if($isActive){
    system "systemctl --user restart ngfd";
  }else{
    system "systemctl --user stop ngfd";
  }
  my $new = getNgfdActive();
  print "$prev => $new\n";
}

&main(@ARGV);
