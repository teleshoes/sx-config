#!/usr/bin/perl
use strict;
use warnings;
use File::Basename qw(basename);

sub lxcShell(@);
sub getApksForPrefix($);

my $EXEC = basename $0;

my $APK_DIR = "/media/sdcard/phone/apks-aliendalvik";

my $USAGE = "Usage:
  $EXEC -h|--help
    show this message

  $EXEC
  $EXEC -x|x|--shell|shell
    run: sudo lxc-attach --name=aliendalvik

  $EXEC -x|x|--shell|shell CMD_ARG CMD_ARG...
  $EXEC CMD_ARG CMD_ARG...
    run: sudo lxc-attach --name=aliendalvik -- CMD_ARG CMD_ARG CMD_ARG..

  $EXEC -i|-i|--install|install APK_FILE APK_FILE...
  $EXEC --install=APK_FILE
    run: apkd-install-preload APK_FILE APK_FILE...
         apkd-install APK_FILE APK_FILE...

    APK_FILE
      an .apk file, OR a prefix of .apk files in $APK_DIR
      e.g.: /tmp/abc.apk  => /tmp/abc.apk
            coolreader-   => $APK_DIR/coolreader-*.apk

  $EXEC -l|l|--launch|launch|--launch-intent|launch-intent INTENT
  $EXEC --launch=INTENT
  $EXEC --launch-intent=INTENT
    -parse INTENT into: PKG_NAME/ACTIVITY
      -if ACTIVITY starts with a '.', PKG_NAME will be prepended
    -run: apkd-launcher PKG_NAME.apk PKG_NAME/ACTIVITY
    e.g.: $EXEC -l org.coolreader/.CoolReader
          => apkd-launcher org.coolreader.apk org.coolreader/org.coolreader.CoolReader
";

my $MODE_SHELL = "shell";
my $MODE_INSTALL = "install";
my $MODE_LAUNCH = "launch";

sub main(@){
  my $mode = $MODE_SHELL;
  my @cmdArgs;
  my @apkFileArgs;
  my $intent;
  for(my $i=0; $i<@_; $i++){
    my $arg = $_[$i];
    my $isFirstArg = $i == 0 ? 1 : 0;
    if($isFirstArg and $arg =~ /^(-h|--help)$/){
      print $USAGE;
      exit 0;
    }elsif($isFirstArg and $arg =~ /^(-x|x|--shell|shell)$/ and @cmdArgs == 0){
      $mode = $MODE_SHELL;
    }elsif($isFirstArg and $arg =~ /^(-i|i|--install|install)$/){
      $mode = $MODE_INSTALL;
    }elsif($isFirstArg and $arg =~ /^(--install)=(.+)$/){
      $mode = $MODE_INSTALL;
      push @apkFileArgs, $2;
    }elsif($isFirstArg and $arg =~ /^(-l|l|--launch|launch|--launch-intent|launch-intent)$/){
      $mode = $MODE_LAUNCH;
    }elsif($isFirstArg and $arg =~ /^(--launch|--launch-intent)=(.+)$/){
      $mode = $MODE_LAUNCH;
      $intent = $2;
    }elsif($mode eq $MODE_SHELL){
      push @cmdArgs, $arg;
    }elsif($mode eq $MODE_INSTALL){
      if(-f $arg){
        push @apkFileArgs, $arg;
      }else{
        my @apkPrefixFiles = getApksForPrefix($arg);
        if(@apkPrefixFiles == 0){
          die "$USAGE\nERROR: no APK files found for prefix $arg\n";
        }
        print "$arg => \n" . join '', map {"  $_\n"} @apkPrefixFiles;
        @apkFileArgs = (@apkFileArgs, @apkPrefixFiles);
      }
    }elsif($mode eq $MODE_LAUNCH and not defined $intent){
      $intent = $arg;
    }else{
      die "$USAGE\nERROR: unknown arg '$arg'\n";
    }
  }

  if($mode eq $MODE_SHELL){
    lxcShell(@cmdArgs);
  }elsif($mode eq $MODE_INSTALL){
    die "$USAGE\nError: no APK_FILE to install\n" if @apkFileArgs == 0;
    system "sudo", "apkd-install-preload", @apkFileArgs;
    system "sudo", "apkd-install", @apkFileArgs;
  }elsif($mode eq $MODE_LAUNCH){
    die "ERROR: missing intent\n" if not defined $intent;
    my ($pkgName, $activity);
    if($intent =~ /^(.+)\/(.+)$/){
      ($pkgName, $activity) = ($1, $2);
      if($activity =~ /^\./){
        #this is NOT implemented by apkd-launcher, apparently
        $activity = "$pkgName$activity";
      }
    }else{
      die "ERROR: malformed intent (must be PKG_NAME/ACTIVITY)\n";
    }
    my $apk = "$pkgName.apk";
    my @cmd = ("apkd-launcher", $apk, "$pkgName/$activity");
    exec @cmd;
  }else{
    die "ERROR: unknown mode $mode\n";
  }
}

sub lxcShell(@){
  my @shellCmd = @_;
  my @cmd = ("sudo", "lxc-attach", "-q", "--name=aliendalvik");
  @cmd = (@cmd, "--", @shellCmd) if @shellCmd > 0;
  system @cmd;
}

sub getApksForPrefix($){
  my ($prefix) = @_;
  my @files = glob "$APK_DIR/$prefix*";
  @files = grep {/\.apk$/i} grep {-f $_} @files;
  return @files;
}

&main(@ARGV);
