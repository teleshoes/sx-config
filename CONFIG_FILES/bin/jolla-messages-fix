#!/usr/bin/perl
use strict;
use warnings;
use File::Basename qw(basename);

my $STATE_FILE = "/opt/jolla-messages-fix-state";

my $RPMS_DIR_OLD = "/media/sdcard/phone/rpms/jolla-messages-old";
my $RPMS_DIR_NEW = "/media/sdcard/phone/rpms/jolla-messages-new";

my @CONFIG_FILES = qw(
  %usr%share%jolla-messages%pages%conversation%SMSMessageDelegate.qml
  %usr%share%jolla-messages%pages%groups%GroupDelegate.qml
  %usr%share%applications%jolla-messages.desktop
);

my $EXEC = basename $0;

my $USAGE = "Usage:
  $EXEC g | -g | get | --get
    -if $STATE_FILE exists and contains 'new' on the first line:
      -print \"new\"
    -otherwise:
      -print \"old\"

  $EXEC t | -t | toggle | --toggle
    -if $STATE_FILE exists and contains 'new' on the first line:
      -run: $EXEC --old
    -otherwise:
      -run: $EXEC --new

  $EXEC o | -o | old | --old
    -install jolla-messages rpms from $RPMS_DIR_OLD
    -refresh as in: $EXEC --refresh
    -write 'old' to $STATE_FILE

  $EXEC n | -n | new | --new
    -install jolla-messages rpms from $RPMS_DIR_NEW
    -refresh as in: $EXEC --refresh
    -write 'new' to $STATE_FILE

  $EXEC r | -r | refresh | --refresh
    -kill jolla-messages
    -copy config files
";

my $CMD_GET = "get";
my $CMD_TOGGLE = "toggle";
my $CMD_OLD = "old";
my $CMD_NEW = "new";
my $CMD_REFRESH = "refresh";

sub getState();
sub setState($);
sub installJollaMessagesRpmsInDir($);
sub refreshJollaMessages();
sub run(@);

sub main(@){
  my $cmd = undef;
  while(@_ > 0){
    my $arg = shift;
    if($arg =~ /^(-h|--help)$/){
      print $USAGE;
      exit 0;
    }elsif($arg =~ /^(g|-g|get|--get)$/){
      $cmd = $CMD_GET;
    }elsif($arg =~ /^(t|-t|toggle|--toggle)$/){
      $cmd = $CMD_TOGGLE;
    }elsif($arg =~ /^(o|-o|old|--old)$/){
      $cmd = $CMD_OLD;
    }elsif($arg =~ /^(n|-n|new|--new)$/){
      $cmd = $CMD_NEW;
    }elsif($arg =~ /^(r|-r|refresh|--refresh)$/){
      $cmd = $CMD_REFRESH;
    }else{
      die "$USAGE\nERROR: unknown arg $arg\n";
    }
  }

  die $USAGE if not defined $cmd;

  if($cmd eq $CMD_GET){
    print getState() . "\n";
  }elsif($cmd eq $CMD_TOGGLE){
    if(getState() eq "new"){
      installJollaMessagesRpmsInDir($RPMS_DIR_OLD);
      setState("old");
    }else{
      installJollaMessagesRpmsInDir($RPMS_DIR_NEW);
      setState("new");
    }
    refreshJollaMessages();
  }elsif($cmd eq $CMD_OLD){
    installJollaMessagesRpmsInDir($RPMS_DIR_OLD);
    setState("old");
    refreshJollaMessages();
  }elsif($cmd eq $CMD_NEW){
    installJollaMessagesRpmsInDir($RPMS_DIR_NEW);
    setState("new");
    refreshJollaMessages();
  }elsif($cmd eq $CMD_REFRESH){
    refreshJollaMessages();
  }else{
    die "ERROR: unknown command $cmd\n";
  }
}

sub getState(){
  my $state = `cat $STATE_FILE`;
  chomp $state;
  if($state =~ /^.*new/){
    return "new";
  }else{
    return "old";
  }
}

sub setState($){
  my ($state) = @_;
  die "ERROR: malformed state\n" if $state !~ /^(old|new)$/;
  run "echo $state | sudo tee $STATE_FILE";
}

sub installJollaMessagesRpmsInDir($){
  my ($dir) = @_;
  run "sudo pkcon search jolla-messages | grep installed";
  run "sudo pkcon -y install-local $dir/jolla-messages*.rpm";
  run "sudo pkcon search jolla-messages | grep installed";
}

sub refreshJollaMessages(){
  run "sudo pkill -f -9 /usr/bin/jolla-messages";
  for my $boingFile(@CONFIG_FILES){
    my $file = $boingFile;
    $file =~ s/%/\//g;
    run "sudo cp -ar /opt/CONFIG_FILES/$boingFile $file";
  }
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
