#!/usr/bin/perl
use strict;
use warnings;
use Time::HiRes qw(time);
use List::Util qw(max);
use File::Basename qw(basename);

my $ipmagicName = "sx";

my $wallpaperDir = "/media/sdcard/phone/Backgrounds/sx-ambience";
my $wallpaperFullDir = "/media/sdcard/phone/Backgrounds/sx-ambience-full";
my $ambienceDir = "/usr/share/ambience";

my @ambienceOrder = qw(silent neko hisaishi sailfish3 seconds ada);
my $preloadAmbience = "neko";
my $ambiences = {
  ada       => [0, "$wallpaperDir/artwork/ada_crop9x16.jpg", {}],
  neko      => [1, "$wallpaperDir/neko/neko_kutie_ontable.jpg", {}],
  seconds   => [0, "$wallpaperDir/artwork/seconds.jpg", {}],
  hisaishi  => [0, "$wallpaperDir/photos/hisaishi_joe.jpg", {}],
  sailfish3 => [0, "$wallpaperFullDir/wallpapers/ambience_sailfish3.jpg", {}],

  silent    => [1, "$wallpaperDir/sarah/sarah_crop9x16.jpg", {
    "ringerVolume"            => "0",

    "highlightColor"          => "\"#ff66a8ff\"",
    "secondaryHighlightColor" => "\"#ff8569db\"",
    "primaryColor"            => "\"#FFFFFFFF\"",
    "secondaryColor"          => "\"#B0FFFFFF\"",
  }],
};

my $preloadAmbience = "$ambienceDir/$preloadAmbience/$preloadAmbience.ambience";
my $preloadDir = "/usr/share/jolla-preload/ambience";
my @preloadConfFiles = qw(
  ambience-Jolla_C.conf
  ambience-Xperia_X.conf
  ambience-default.conf
  ambience-origami.conf
);

sub getDefaultAmbienceConfig($$);
sub getValidConfigKeys();
sub run(@);

sub main(@){
  my $nowMillis = int(time * 1000);

  my $tmpAmbienceDir = "/tmp/sx-ambiences-$nowMillis";

  my $timestampOffsetSex = 0;

  my @ambienceCopyImgCommands;

  for my $ambienceName(reverse @ambienceOrder){
    run "mkdir", "-p", "$tmpAmbienceDir/$ambienceName";
    my ($isFavorite, $wallpaperPath, $extraConfig) = @{$$ambiences{$ambienceName}};
    my $wallpaperFileName = basename $wallpaperPath;

    my $defaultConfig = getDefaultAmbienceConfig($ambienceName, $timestampOffsetSex);
    $timestampOffsetSex += 1;

    my %config = (%$defaultConfig, %$extraConfig);
    $config{wallpaper} = "\"$wallpaperFileName\"";
    $config{favorite} = $isFavorite ? "true" : "false";

    my @validConfigKeys = @{getValidConfigKeys()};
    my $maxKeyLen = max map {length $_} @validConfigKeys;

    my @configLines;
    for my $configKey(@validConfigKeys){
      next if not defined $config{$configKey};
      my $spacer = " " x ($maxKeyLen - length $configKey);
      my $fmt = "    \"$configKey\"$spacer   : $config{$configKey}";
      push @configLines, $fmt;
    }
    my $configFormat = "{\n" . (join ",\n", @configLines) . "\n}\n";
    open FH, "> $tmpAmbienceDir/$ambienceName/$ambienceName.ambience";
    print FH $configFormat;
    close FH;

    run "mkdir", "-p", "$tmpAmbienceDir/$ambienceName/images";
    push @ambienceCopyImgCommands, (""
      . "cp -ar"
      . " $wallpaperPath"
      . " $ambienceDir/$ambienceName/images/$wallpaperFileName"
    );
  }

  run "ipmagic", $ipmagicName, "-u", "root", "mv $ambienceDir $ambienceDir-bak$nowMillis";
  run "ipmagic", $ipmagicName, "-u", "root",
    "--rsync", "-avP", "--no-owner", "--no-group", "$tmpAmbienceDir/", ":$ambienceDir/";

  my @cmds = (
    "rm -rf /home/nemo/.local/share/system/privileged/Ambienced/",
    "rm -rf /home/nemo/.local/share/ambienced/",
    "rm -rf /home/nemo/.cache/ambienced/",
    @ambienceCopyImgCommands,
  );
  for my $file(@preloadConfFiles){
    push @cmds, "echo $preloadAmbience > $preloadDir/$file";
  }
  run "ipmagic", $ipmagicName, "-u", "root", join ";\n", @cmds;
  print "\n";

  print "restarting lipstick, ok? [y/N] ";
  my $response = <STDIN>;
  if($response =~ /^(y|Y)$/){
    run "ipmagic", $ipmagicName,
      "systemctl --user stop ambienced ; systemctl --user restart lipstick";
  }else{
    print "ambiences wont work until you stop ambienced and restart lipstick\n";
  }
}

sub getDefaultAmbienceConfig($$){
  my ($ambienceName, $timestampOffsetSex) = @_;

  my $time = time;
  $time += $timestampOffsetSex;

  my $timestamp = `date --date=\@$time +%Y-%m-%dT%H:%M:%S`;
  chomp $timestamp;

  return {
    "translationCatalog"       => "\"ambience-$ambienceName\"",
    "displayName"              => "\"$ambienceName\"",
    "wallpaper"                => "\"\"",
    "highlightColor"           => "\"#ff81ffff\"",
    "secondaryHighlightColor"  => "\"#ff6cb7d4\"",
    "primaryColor"             => "\"#FFFFFFFF\"",
    "secondaryColor"           => "\"#B0FFFFFF\"",
    "ringerVolume"             => "80",
    "favorite"                 => "",
    "timestamp"                => "\"$timestamp\"",
    "version"                  => "2",

    # 0 means set tonefiles to 'no sound'
    # 1 means reset tonefiles to defaults
    # missing means leave tonefiles alone
#   "ringerToneFile"           => "{ \"enabled\": 1 }",
#   "messageToneFile"          => "{ \"enabled\": 1 }",
#   "mailToneFile"             => "{ \"enabled\": 1 }",
#   "internetCallToneFile"     => "{ \"enabled\": 1 }",
#   "chatToneFile"             => "{ \"enabled\": 1 }",
#   "calendarToneFile"         => "{ \"enabled\": 1 }",
#   "clockAlarmToneFile"       => "{ \"enabled\": 1 }",
  };
}
sub getValidConfigKeys(){
  return [qw(
    translationCatalog
    displayName
    wallpaper
    highlightColor
    secondaryHighlightColor
    primaryColor
    secondaryColor
    ringerVolume
    favorite
    timestamp
    version
    ringerToneFile
    messageToneFile
    mailToneFile
    internetCallToneFile
    chatToneFile
    calendarToneFile
    clockAlarmToneFile
  )];
}

sub run(@){
  print "@_\n";
  system @_;
  die "\"@_\" failed\n" if $? != 0;
}

&main(@ARGV);
