#!/usr/bin/perl
use strict;
use warnings;
use List::Util qw(max);

my $IPMAGIC_NAME = "sx";
my $USER = "nemo";

my $DIR_BASE = "$ENV{HOME}/Code/sx";
my $DIR_BACKUP = "$DIR_BASE/backup";

my $APP_DATA_DIR = "/home/$USER/.local/share/waydroid/data/data";

my %BACKUPS = (
  coolreader  => "org.coolreader",
  facebook    => "com.facebook.lite",
  fbmessenger => "com.facebook.mlite",
  kingdom     => "com.rawfury.kingdom2crowns",
  riot        => "im.vector.alpha",
  jitsi       => "org.jitsi.meet",
);
my @ALL_BACKUP_NAMES = sort keys %BACKUPS;

my %BACKUP_LOCAL_DIRS = map {$_ =>
  "$DIR_BACKUP/backup-android-apps/$_/$BACKUPS{$_}" } sort keys %BACKUPS;

my %BACKUP_REMOTE_DIRS = map {$_ =>
  "$APP_DATA_DIR/$BACKUPS{$_}"} sort keys %BACKUPS;

my $MAX_BACKUP_NAME_LEN = max map { length $_ } @ALL_BACKUP_NAMES;

my $BACKUP_FMT = join "", map {
  sprintf("    %-${MAX_BACKUP_NAME_LEN}s => %s\n", $_, $BACKUPS{$_})
} sort keys %BACKUPS;

my $CMD_BACKUP = "backup";
my $CMD_RESTORE = "restore";
my $CMD_SNAPSHOT = "snapshot";

my $usage = "Usage:
  $0 -h|--help
    show this message

  $0 -b|--backup|b|backup
    -backup all <BACKUP_NAME>s
      same as: $0 --backup @ALL_BACKUP_NAMES

  $0 -b|--backup|b|backup BACKUP_NAME BACKUP_NAME ..
    -backup remote app data files locally for each <BACKUP_NAME>
      <IPMAGIC_HOST>:$APP_DATA_DIR/<PKG_NAME>
        => $DIR_BACKUP/backup-android-apps/<BACKUP_NAME>/<PKG_NAME>


  $0 -r|--restore|r|restore
    -restore all <BACKUP_NAME>s
      same as: $0 --restore @ALL_BACKUP_NAMES

  $0 -r|--restore|r|restore BACKUP_NAME BACKUP_NAME ..
    -get android app user id (UID of owner of remote android app data dir)
    -overwrite remote app data files from local backup for each <BACKUP_NAME>
      $DIR_BACKUP/backup-android-apps/<BACKUP_NAME>/<PKG_NAME>
        => <IPMAGIC_HOST>:$APP_DATA_DIR/<PKG_NAME>
    -chown all files under app data dir, setting UID+GID to android app user id


  $0 -s|--snapshot|s|snapshot BACKUP_NAME BACKUP_NAME ..
    snapshot all <BACKUP_NAME>s
      same as: $0 --snapshot @ALL_BACKUP_NAMES

  $0 -s|--snapshot|s|snapshot BACKUP_NAME BACKUP_NAME ..
    -copy most recent local backup to another local dir using mtime of backup
      $DIR_BACKUP/backup-android-apps/<BACKUP_NAME>/<PKG_NAME>
        => $DIR_BACKUP/backup-android-apps/<BACKUP_NAME>/<YYYY-MM-DD>_<EPOCH>_<PKG_NAME>

  BACKUP_NAME => PKG_NAME\n$BACKUP_FMT
";

sub getAppUserId($);
sub mtime($);
sub run(@);

sub main(@){
  my $cmd;
  my @backupNames;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $usage;
      exit 0;
    }elsif($arg =~ /^(-b|--backup|b|backup)$/){
      $cmd = $CMD_BACKUP;
    }elsif($arg =~ /^(-r|--restore|r|restore)$/){
      $cmd = $CMD_RESTORE;
    }elsif($arg =~ /^(-s|--snapshot|s|snapshot)$/){
      $cmd = $CMD_SNAPSHOT;
    }elsif(defined $BACKUPS{$arg}){
      push @backupNames, $arg;
    }else{
      die "$usage\nERROR: unknown arg $arg\n";
    }
  }
  die "$usage\nERROR: no command given\n" if not defined $cmd;

  @backupNames = @ALL_BACKUP_NAMES if @backupNames == 0;

  my $host = `ipmagic $IPMAGIC_NAME`;
  chomp $host;

  for my $backupName(@backupNames){
    die "$usage\nERROR: unknown backup $backupName\n" if not defined $BACKUPS{$backupName};
    my $remoteDir = $BACKUP_REMOTE_DIRS{$backupName};
    my $localDir = $BACKUP_LOCAL_DIRS{$backupName};
    my $pkgName = $BACKUPS{$backupName};

    if($cmd eq $CMD_BACKUP){
      run "mkdir", "-p", "$localDir/";
      run "rsync", "-avP", "--del", "root\@$host:$remoteDir/", "$localDir/";
    }elsif($cmd eq $CMD_RESTORE){
      my $appUserId = getAppUserId("$remoteDir/");

      run "rsync",
        "-avP", "--del",
        "--no-owner", "--no-group",
        "$localDir/",
        "root\@$host:$remoteDir/"
      ;
      run "ipmagic", $IPMAGIC_NAME, "-u", "root",
        "chown", "-R", "$appUserId.$appUserId", "$remoteDir/";
    }elsif($cmd eq $CMD_SNAPSHOT){
      if(not -d $localDir){
        die "ERROR: cannot snapshot $backupName, no backup exists\n";
      }
      my $mtime = mtime $localDir;
      my $mtimeFmt = `date --date=\@$mtime +%Y-%m-%d`;
      chomp $mtimeFmt;

      my $snapshotName = "${mtimeFmt}_${mtime}_${pkgName}";
      my $snapshotDir = "$DIR_BACKUP/backup-android-apps/$backupName/$snapshotName";

      run "rsync", "-avP", "--del", "$localDir/", "$snapshotDir/"
    }else{
      die "ERROR: unknown command $cmd\n";
    }
  }
}

sub getAppUserId($){
  my ($androidDir) = @_;

  my $appUserId = `ipmagic $IPMAGIC_NAME -u root stat -c %u $androidDir`;
  chomp $appUserId;

  if($appUserId !~ /^\d+$/){
    die "could not read android app user ID\n";
  }elsif($appUserId =~ /^(0|1000|100000)$/){
    die "app user id ($appUserId) should never be 0 or 1000 or 100000\n";
  }

  return $appUserId;
}

sub mtime($){
  my @stat = stat $_[0];
  return $stat[9];
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
