#!/usr/bin/perl
use strict;
use warnings;

my $IPMAGIC_NAME = "sx";
my $USER = "nemo";

my $DIR_BASE = "$ENV{HOME}/Code/sx";
my $DIR_BACKUP = "$DIR_BASE/backup";

my $APP_DATA_DIR = "/home/$USER/.local/share/waydroid/data/data";

my %BACKUPS = (
  coolreader  => "org.coolreader",
  facebook    => "com.facebook.lite",
  fbmessenger => "com.facebook.mlite",
  kingdom     => "com.rawfury.kingdom2crowns",
  riot        => "im.vector.alpha",
  jitsi       => "org.jitsi.meet",
);

my %BACKUP_LOCAL_DIRS = map {$_ =>
  "$DIR_BACKUP/backup-android-apps/$_/$BACKUPS{$_}" } sort keys %BACKUPS;

my %BACKUP_REMOTE_DIRS = map {$_ =>
  "$APP_DATA_DIR/$BACKUPS{$_}"} sort keys %BACKUPS;

my $BACKUP_FMT = join "", map {
    "    $_\n      $BACKUP_REMOTE_DIRS{$_}\n      => $BACKUP_LOCAL_DIRS{$_}\n"
} sort keys %BACKUPS;

my $CMD_BACKUP = "backup";
my $CMD_RESTORE = "restore";

my $usage = "Usage:
  $0 -h|--help
    show this message

  $0 --backup [BACKUP_NAME BACKUP_NAME ..]
    backup each remote BACKUP_NAME dir to local backup
      (backup all if no BACKUP_NAME given)

  $0 --restore [BACKUP_NAME BACKUP_NAME ..]
    overwrite each dest BACKUP_NAME dir from local backup
    set uid/gid to android app user id
      (restore all if no BACKUP_NAME given)

  BACKUP_NAME\n$BACKUP_FMT
";

sub getAppUserId($);
sub run(@);

sub main(@){
  my $cmd;
  my @backupNames;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $usage;
      exit 0;
    }elsif($arg =~ /^(--backup)$/){
      $cmd = $CMD_BACKUP;
    }elsif($arg =~ /^(--restore)$/){
      $cmd = $CMD_RESTORE;
    }elsif(defined $BACKUPS{$arg}){
      push @backupNames, $arg;
    }else{
      die "$usage\nERROR: unknown arg $arg\n";
    }
  }
  die "$usage\nERROR: no command given\n" if not defined $cmd;

  @backupNames = sort keys %BACKUPS if @backupNames == 0;

  my $host = `ipmagic $IPMAGIC_NAME`;
  chomp $host;

  for my $backupName(@backupNames){
    die "$usage\nERROR: unknown backup $backupName\n" if not defined $BACKUPS{$backupName};
    my $remoteDir = $BACKUP_REMOTE_DIRS{$backupName};
    my $localDir = $BACKUP_LOCAL_DIRS{$backupName};

    if($cmd eq $CMD_BACKUP){
      run "mkdir", "-p", "$localDir/";
      run "rsync", "-avP", "--del", "root\@$host:$remoteDir/", "$localDir/";
    }elsif($cmd eq $CMD_RESTORE){
      my $appUserId = getAppUserId("$remoteDir/");

      run "rsync",
        "-avP", "--del",
        "--no-owner", "--no-group",
        "$localDir/",
        "root\@$host:$remoteDir/"
      ;
      run "ipmagic", $IPMAGIC_NAME, "-u", "root",
        "chown", "-R", "$appUserId.$appUserId", "$remoteDir/";
    }else{
      die "ERROR: unknown command $cmd\n";
    }
  }
}

sub getAppUserId($){
  my ($androidDir) = @_;

  my $appUserId = `ipmagic $IPMAGIC_NAME -u root stat -c %u $androidDir`;
  chomp $appUserId;

  if($appUserId !~ /^\d+$/){
    die "could not read android app user ID\n";
  }elsif($appUserId =~ /^(0|1000|100000)$/){
    die "app user id ($appUserId) should never be 0 or 1000 or 100000\n";
  }

  return $appUserId;
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
