#!/usr/bin/perl
use strict;
use warnings;

my $user = "nemo";
my $ipmagicName = "sx";

my $BASE_DIR = "$ENV{HOME}/Code/sx";
my $BACKUP_DIR = "$BASE_DIR/backup/klomp";

sub getShortcutToggles();
sub getShortcutLaunchers();
sub getActions();
sub gvariantList(@);
sub run(@);

my $toggles = getShortcutToggles();
my $launchers = getShortcutLaunchers();
my $actions = getActions();

my @shortcuts = (
  $$toggles{flight},
  $$toggles{wlan},
  $$toggles{mobile},
  $$toggles{bluetooth},
  $$toggles{flashlight},
  $$toggles{tethering},
  $$toggles{brightness_slider},
  $$toggles{orientation_slider},
);
my @actions = (
  $$actions{internet},
);

my $dconf = {
  "/desktop/lipstick-jolla-home/close_from_top" => "true",
  "/desktop/lipstick-jolla-home/left_peek_to_events" => "false",
  "/desktop/lipstick-jolla-home/lock_screen_camera" => "true",

  "/desktop/lipstick-jolla-home/events_screen_shortcuts_enabled" => "true",
  "/desktop/lipstick-jolla-home/events_screen_shortcuts_user" => "true",
  "/desktop/lipstick-jolla-home/events_screen_shortcuts" => gvariantList(@shortcuts),

  "/desktop/lipstick-jolla-home/events_screen_actions_enabled" => "true",
  "/desktop/lipstick-jolla-home/events_screen_actions_user" => "true",
  "/desktop/lipstick-jolla-home/events_screen_actions" => gvariantList(@actions),

  "/apps/jolla-camera/storagePath" => "'/run/media/nemo/phone'",

  "/apps/sailfish-browser/settings/autostart_private_browsing" => "true",
  "/apps/sailfish-browser/settings/home_page" => "'file:///media/sdcard/phone'",

  "/jolla/voicecall/quickcall" => "false",

  "/jolla/sound/force_mediavolume" => "true",

  "/desktop/lipstick-jolla-home/close_all_apps_hint_count" => "4",
  "/desktop/lipstick-jolla-home/events_view_close_hint_count" => "4",
  "/desktop/sailfish/hints/return_to_home_hint_count" => "4",
  "/sailfish/accounts/settings_autosave_hint_count" => "4",
  "/sailfish/calculator/scientific_calculator_hint_count" => "4",
  "/sailfish/calendar/change_month_hint_count" => "4",
  "/sailfish/camera/camera_mode_hint_count" => "4",
  "/sailfish/camera/camera_roll_hint_count" => "4",
  "/sailfish/email/folder_access_hint_count" => "4",
  "/sailfish/gallery/split_view_back_hint_count" => "4",
  "/sailfish/gallery/vertical_page_back_hint" => "4",
  "/sailfish/maps/explore_map_hint_count" => "4",
  "/sailfish/messages/access_contact_card_hint_count" => "4",
  "/sailfish/people/use_count" => "4",
  "/sailfish/store/categories_attached_page_hint_count" => "4",
  "/sailfish/store/download_upgrade_hint_count" => "4",
  "/sailfish/voicecall/incoming_call_hint_count" => "4",
  "/sailfish/voicecall/init_call_hint_count" => "4",
};

sub main(@){
  my $host = `ipmagic $ipmagicName`;
  chomp $host;

  my $script = "";
  for my $key(sort keys %$dconf){
    my $val = $$dconf{$key};
    $script .= "
      echo -ne \"\\n$key\\n\"
      OLD=`dconf read $key`
      dconf write $key \"$val\"
      NEW=`dconf read $key`
      if [ \"\$OLD\" == \"\$NEW\" ]; then
        echo -ne \"  (no change)\\n\"
      else
        echo -ne \"  old:\$OLD\n\"
        echo -ne \"    =>\n\"
        echo -ne \"  new:\$NEW\\n\"
      fi
    ";
  }
  my $scriptFile = "$host-setup-dconf.sh";
  open FH, "> /tmp/$scriptFile";
  print FH $script;
  close FH;

  run "scp", "/tmp/$scriptFile", "$user\@$host:/tmp/$scriptFile";
  run "ipmagic", $ipmagicName, "bash", "/tmp/$scriptFile";
}

sub getShortcutToggles(){
  return {
    flight              => 'system_settings/connectivity/flight/enable_switch',
    wlan                => 'system_settings/connectivity/wlan/enable_switch',
    mobile              => 'system_settings/connectivity/mobile/context0',
    bluetooth           => 'system_settings/connectivity/bluetooth/enable_switch',
    gps                 => 'system_settings/connectivity/gps_and_location/enable_location',
    tethering           => 'system_settings/connectivity/tethering/wlan_hotspot_switch',
    flashlight          => 'system_settings/look_and_feel/events/flashlight/enable_switch',
    orientation_lock    => 'system_settings/look_and_feel/display/orientation_lock',
    brightness_slider   => 'system_settings/look_and_feel/display/brightness_slider',
    orientation_slider  => 'system_settings/look_and_feel/orientation/orientation_slider',
    ringer_volume       => 'system_settings/look_and_feel/sounds/ringer_volume',
  };
}

sub getShortcutLaunchers(){
  return {
    ambiences           => 'system_settings/look_and_feel/ambiences',
    display             => 'system_settings/look_and_feel/display',
    sounds              => 'system_settings/look_and_feel/sounds',
    gestures            => 'system_settings/look_and_feel/gestures',
    events              => 'system_settings/look_and_feel/events',
    lockscreen          => 'system_settings/look_and_feel/lockscreen',
    patchmanager        => 'system_settings/look_and_feel/patchmanager',
    orientation         => 'system_settings/look_and_feel/orientation',
    remorse_timeout     => 'system_settings/look_and_feel/sailfishos-remorse-items-timeout',
    wlan                => 'system_settings/connectivity/wlan',
    mobile              => 'system_settings/connectivity/mobile',
    tethering           => 'system_settings/connectivity/tethering',
    vpn                 => 'system_settings/connectivity/vpn',
    flight              => 'system_settings/connectivity/flight',
    gps_and_location    => 'system_settings/connectivity/gps_and_location',
    usb                 => 'system_settings/connectivity/usb',
    bluetooth           => 'system_settings/connectivity/bluetooth',
    device_lock         => 'system_settings/security/device_lock',
    pin_code            => 'system_settings/security/pin_code',
    sideloading         => 'system_settings/security/sideloading',
    certificates        => 'system_settings/security/certificates',
    sailfishos          => 'system_settings/system/sailfishos',
    backup              => 'system_settings/system/backup',
    storage             => 'system_settings/system/storage',
    date_time           => 'system_settings/system/date_time',
    language_and_region => 'system_settings/system/language_and_region',
    text_input          => 'system_settings/system/text_input',
    developer_mode      => 'system_settings/system/developer_mode',
    about_device        => 'system_settings/info/about_device',
    transferui          => 'system_settings/info/transferui',
    datacounters        => 'system_settings/info/datacounters',
    android             => 'system_settings/info/android',
    reset               => 'system_settings/info/reset',
  };
}

sub getActions(){
  return {
    camera   => '/usr/share/lipstick/quickactions/com.jolla.camera.conf',
    clock    => '/usr/share/lipstick/quickactions/com.jolla.clock.conf',
    internet => '/usr/share/lipstick/quickactions/com.jolla.internet.conf',
    notes    => '/usr/share/lipstick/quickactions/com.jolla.notes.conf',
    browser  => '/usr/share/lipstick/quickactions/org.sailfishos.browser.conf',
  };
}

sub gvariantList(@){
  if(@_ == 0){
    return "'[]'"; #have to wrap empty list in quotes for some reason
  }else{
    return "[" . join(", ", map {"'$_'"} @_) . "]";
  }
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
