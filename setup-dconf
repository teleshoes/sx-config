#!/usr/bin/perl
use strict;
use warnings;

my $user = "nemo";
my $ipmagicName = "sx";

my $BASE_DIR = "$ENV{HOME}/Code/sx";
my $BACKUP_DIR = "$BASE_DIR/backup/klomp";

sub getTopmenuToggles();
sub getTopmenuSliders();
sub getTopmenuActions();
sub getTopmenuShortcuts();
sub gvariantList(@);
sub run(@);

my $topmenuToggles = getTopmenuToggles();
my $topmenuSliders = getTopmenuSliders();
my $topmenuActions = getTopmenuActions();
my $topmenuShortcuts = getTopmenuShortcuts();

my @selectedTopmenuItems = (
  $$topmenuSliders{brightness},
  $$topmenuSliders{media_volume},

  $$topmenuToggles{cellular_data},
  $$topmenuToggles{wlan},
  $$topmenuToggles{bluetooth},
  $$topmenuToggles{flight},

  $$topmenuToggles{flashlight},
  $$topmenuToggles{orientation_lock},
  $$topmenuToggles{location},
  $$topmenuToggles{hotspot},

  $$topmenuToggles{resolv},
  $$topmenuActions{connect_to_internet},
  $$topmenuActions{make_a_note},
  $$topmenuToggles{volte},
);

my @notificationsAppNamesNoPreview = (
);

my $dconf = {
  "/lipstick/notifications_app_names_no_preview" => gvariantList(@notificationsAppNamesNoPreview),

  "/apps/text_input/autocaps/enabled" => "false",

  #Disable Android App Support system package verification
  "/alien/persist.package.replacement.enabled" => "true",

  "/sailfish/text_input/active_layout" => "'en-arrow.qml'",
  "/sailfish/text_input/enabled_layouts" => "['en-arrow.qml']",
  "/sailfish/text_input/previous_layout" => "'en.qml'",
  "/sailfish/text_input/enabled_hw_layouts" => "'us'",

  "/desktop/lipstick-jolla-home/force_weather_loading" => "true",

  "/desktop/lipstick-jolla-home/close_from_top" => "true",
  "/desktop/lipstick-jolla-home/left_peek_to_events" => "false",
  "/desktop/lipstick-jolla-home/lock_screen_camera" => "true",

  "/desktop/lipstick-jolla-home/topmenu_shortcuts" => gvariantList(@selectedTopmenuItems),
  "/desktop/lipstick-jolla-home/topmenu_shortcuts_enabled" => "true",

  "/desktop/jolla/reboot_action_enabled" => "true",

  #camera storage location, sometimes reset to internal
  "/apps/jolla-camera/storagePath" => "'/home/nemo/android_storage/SDCARD'",

  "/apps/sailfish-browser/settings/autostart_private_browsing" => "true",
  "/apps/sailfish-browser/settings/home_page" => "'file:///media/sdcard/phone'",

  "/jolla/voicecall/quickcall" => "false",

  "/jolla/sound/force_mediavolume" => "true",

  "/jolla/sound/disable_volume_buttons" => "true",

  "/uk/co/piggz/harbour-advanced-camera/storagePath" => "'/media/sdcard/phone'",
  "/uk/co/piggz/harbour-advanced-camera/primary/image/flash" => "2", #1=auto,2=off,4=on

  "/uk/co/piggz/amazfish/device/dateformat"             => "0",  #just time
  "/uk/co/piggz/amazfish/device/disconnectnotification" => "false",
  "/uk/co/piggz/amazfish/device/displayitems"           => "'status,activity,compass,settings,'",
  "/uk/co/piggz/amazfish/device/distanceunit"           => "1", #imperial
  "/uk/co/piggz/amazfish/device/language"               => "0", #english
  "/uk/co/piggz/amazfish/device/realtimehrmmeasurement" => "true",
  "/uk/co/piggz/amazfish/device/timeformat"             => "0", #24hr
  "/uk/co/piggz/amazfish/profile/alertfitnessgoal"      => "false",
  "/uk/co/piggz/amazfish/profile/alldayhrm"             => "uint32 2",
  "/uk/co/piggz/amazfish/profile/displayonliftwrist"    => "1",
  "/uk/co/piggz/amazfish/profile/fitnessgoal"           => "uint32 10000",
  "/uk/co/piggz/amazfish/profile/hrmsleepsupport"       => "false",
  "/uk/co/piggz/amazfish/profile/name"                  => "'nemo'",
  "/uk/co/piggz/amazfish/profile/wearlocation"          => "0", #left wrist
  "/uk/co/piggz/amazfish/profile/wristScheduleEnd"      => "''",
  "/uk/co/piggz/amazfish/profile/wristScheduleStart"    => "''",

  "/uk/co/piggz/amazfish/app/button-double-action" => "'action-custom'",
  "/uk/co/piggz/amazfish/app/button-triple-action" => "'action-custom'",
  "/uk/co/piggz/amazfish/app/button-quad-action"   => "'action-custom'",

  "/desktop/lipstick-jolla-home/close_all_apps_hint_count" => "4",
  "/desktop/lipstick-jolla-home/events_view_close_hint_count" => "4",
  "/desktop/sailfish/hints/close_app_hint_count" => "4",
  "/desktop/sailfish/hints/return_to_home_hint_count" => "4",
  "/sailfish/accounts/settings_autosave_hint_count" => "4",
  "/sailfish/calculator/scientific_calculator_hint_count" => "4",
  "/sailfish/calendar/change_month_hint_count" => "4",
  "/sailfish/camera/camera_mode_hint_count" => "4",
  "/sailfish/camera/camera_roll_hint_count" => "4",
  "/sailfish/email/folder_access_hint_count" => "4",
  "/sailfish/gallery/split_view_back_hint_count" => "4",
  "/sailfish/gallery/vertical_page_back_hint" => "4",
  "/sailfish/maps/explore_map_hint_count" => "4",
  "/sailfish/messages/access_contact_card_hint_count" => "4",
  "/sailfish/text_input/close_keyboard_hint_count" => "4",
  "/sailfish/text_input/switch_keyboard_hint_count" => "4",
  "/sailfish/people/use_count" => "4",
  "/sailfish/store/categories_attached_page_hint_count" => "4",
  "/sailfish/store/download_upgrade_hint_count" => "4",
  "/sailfish/voicecall/incoming_call_hint_count" => "4",
  "/sailfish/voicecall/init_call_hint_count" => "4",
};

sub main(@){
  my $host = `ipmagic $ipmagicName`;
  chomp $host;

  my $script = "";
  for my $key(sort keys %$dconf){
    my $val = $$dconf{$key};
    $script .= "
      source /etc/bashrc
      echo -ne \"\\n$key\\n\"
      OLD=`dconf read $key`
      dconf write $key \"$val\"
      NEW=`dconf read $key`
      if [ \"\$OLD\" == \"\$NEW\" ]; then
        echo -ne \"  (no change)\\n\"
      else
        echo -ne \"  old:\$OLD\n\"
        echo -ne \"    =>\n\"
        echo -ne \"  new:\$NEW\\n\"
      fi
    ";
  }
  my $scriptFile = "$host-setup-dconf.sh";
  open FH, "> /tmp/$scriptFile";
  print FH $script;
  close FH;

  run "scp", "/tmp/$scriptFile", "$user\@$host:/tmp/$scriptFile";
  run "ipmagic", $ipmagicName, "bash", "/tmp/$scriptFile";
}

sub getTopmenuToggles(){
  return {
    fontsize               => 'system_settings/look_and_feel/display/fontsize/enable_switch',
    orientation_lock       => 'system_settings/look_and_feel/display/orientation_lock',
    silence                => 'system_settings/look_and_feel/sounds/silence_switch',
    flashlight             => 'system_settings/look_and_feel/events/flashlight/enable_switch',
    wlan                   => 'system_settings/connectivity/wlan/enable_switch',
    global_proxy           => 'system_settings/connectivity/wlan/enable_global_proxy',
    resolv                 => 'system_settings/connectivity/wlan/resolv_toggle_switch',
    volte                  => 'system_settings/connectivity/volte_toggle_switch',
    cellular_data          => 'system_settings/connectivity/mobile/context0',
    hotspot                => 'system_settings/connectivity/tethering/wlan_hotspot_switch',
    vpn                    => 'system_settings/connectivity/vpn/enable_switch',
    flight                 => 'system_settings/connectivity/flight/enable_switch',
    location               => 'system_settings/connectivity/gps_and_location/enable_location',
    bluetooth              => 'system_settings/connectivity/bluetooth/enable_switch',
    nfc                    => 'system_settings/connectivity/nfc/enable_nfc',
  };
}
sub getTopmenuSliders(){
  return {
    brightness             => 'system_settings/look_and_feel/display/brightness_slider',
    ringer_volume          => 'system_settings/look_and_feel/sounds/ringer_volume',
    media_volume           => 'system_settings/look_and_feel/sounds/media_volume_slider',
  };
}
sub getTopmenuActions(){
  return {
    connect_to_internet    => 'system_settings/look_and_feel/topmenu/actions/connect_to_internet',
    search_web             => 'system_settings/look_and_feel/topmenu/actions/search_the_web',
    set_an_alarm           => 'system_settings/look_and_feel/topmenu/actions/set_an_alarm',
    take_a_selfie          => 'system_settings/look_and_feel/topmenu/actions/take_a_selfie',
    make_a_note            => 'system_settings/look_and_feel/topmenu/actions/make_a_note',
  };
}
sub getTopmenuShortcuts(){
  return {
    settings_display       => 'system_settings/look_and_feel/display',
    settings_sounds        => 'system_settings/look_and_feel/sounds',
    settings_gestures      => 'system_settings/look_and_feel/gestures',
    settings_events        => 'system_settings/look_and_feel/events',
    settings_topmenu       => 'system_settings/look_and_feel/topmenu',
    settings_lockscreen    => 'system_settings/look_and_feel/lockscreen',
    settings_patchmanager  => 'system_settings/look_and_feel/patchmanager',
    settings_usb           => 'system_settings/connectivity/usb',
    settings_device_lock   => 'system_settings/security/device_lock',
    settings_encryption    => 'system_settings/security/encryption',
    settings_untrusted     => 'system_settings/security/sideloading',
    settings_pin_code      => 'system_settings/security/pin_code',
    settings_certificates  => 'system_settings/security/certificates',
    settings_os_updates    => 'system_settings/system/sailfishos',
    settings_users         => 'system_settings/system/users',
    settings_backup        => 'system_settings/system/backup',
    settings_storage       => 'system_settings/system/storage',
    settings_date_time     => 'system_settings/system/date_time',
    settings_language      => 'system_settings/system/language_and_region',
    settings_text_input    => 'system_settings/system/text_input',
    settings_battery       => 'system_settings/system/battery',
    settings_dev_mode      => 'system_settings/system/developer_mode',
    settings_about_device  => 'system_settings/info/about_device',
    settings_transfers     => 'system_settings/info/transferui',
    settings_data_counters => 'system_settings/info/datacounters',
    settings_android       => 'system_settings/info/android',
  };
}

sub gvariantList(@){
  if(@_ == 0){
    return "'[]'"; #have to wrap empty list in quotes for some reason
  }else{
    return "[" . join(", ", map {"'$_'"} @_) . "]";
  }
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
