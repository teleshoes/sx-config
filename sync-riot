#!/usr/bin/perl
use strict;
use warnings;

my $IPMAGIC_NAME = "sx";
my $IPMAGIC_USER = "nemo";

my $DIR_BASE = "$ENV{HOME}/Code/sx";
my $DIR_BACKUP = "$DIR_BASE/backup";

my $DIR_LOCAL_RIOT = "$DIR_BACKUP/backup-riot/%opt%alien%data%data%im.vector.alpha";
my $DIR_REMOTE_RIOT = "/opt/alien/data/data/im.vector.alpha";

my $CMD_BACKUP = "backup";
my $CMD_RESTORE = "restore";

my $usage = "Usage:
  $0 -h|--help
    show this message

  $0 --backup
    backup remote riot dir to local backup

  $0 --restore
    overwrite dest riot dir from local backup
    set uid/gid to android app user id
";

sub getAppUserId($);
sub run(@);

sub main(@){
  my $cmd;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $usage;
      exit 0;
    }elsif($arg =~ /^(--backup)$/){
      $cmd = $CMD_BACKUP;
    }elsif($arg =~ /^(--restore)$/){
      $cmd = $CMD_RESTORE;
    }else{
      die "$usage\nERROR: unknown arg $arg\n";
    }
  }
  die $usage if not defined $cmd;

  my $host = `ipmagic $IPMAGIC_NAME`;
  chomp $host;

  if($cmd eq $CMD_BACKUP){
    run "rsync", "-avP", "--del", "root\@$host:$DIR_REMOTE_RIOT/", "$DIR_LOCAL_RIOT/";
  }elsif($cmd eq $CMD_RESTORE){
    my $appUserId = getAppUserId("$DIR_REMOTE_RIOT/");

    run "rsync",
      "-avP", "--del",
      "$DIR_LOCAL_RIOT/",
      "root\@$host:$DIR_REMOTE_RIOT/"
    ;
    run "ipmagic", $IPMAGIC_NAME, "-u", "root",
      "chown", "-R", "$appUserId.$appUserId", "$DIR_REMOTE_RIOT/";
  }else{
    die "ERROR: unknown command $cmd\n";
  }
}

sub getAppUserId($){
  my ($androidDir) = @_;

  my $appUserId = `ipmagic $IPMAGIC_NAME -u root stat -c %u $androidDir`;
  chomp $appUserId;

  if($appUserId !~ /^\d+$/){
    die "could not read android app user ID\n";
  }elsif($appUserId =~ /^(0|1000|100000)$/){
    die "app user id ($appUserId) should never be 0 or 1000 or 100000\n";
  }

  return $appUserId;
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
