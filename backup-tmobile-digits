#!/usr/bin/perl
use strict;
use warnings;
use lib `dirname $0 | tr -d '\n'`;
use PhoneBackupUtils;

my $IPMAGIC_NAME = "sx";
my $USER = "nemo";

sub getFileIdName($$);

my $REMOTE_DIGITS_DB_FILE = "/home/.android/data/data/com.tmobile.digits/databases/cDigits3x.db";
my $REMOTE_DIGITS_ATT_FILES_DIR = "/home/$USER/android_storage/Android/data/com.tmobile.digits/files/DIGITS/.Media";

my $BACKUP_DIGITS_DB_DIR = "$ENV{HOME}/Code/sx/backup/backup-mms/tmobile-digits/android/db";
my $BACKUP_DIGITS_ATT_FILES_BASE_DIR = "$ENV{HOME}/Code/sx/backup/backup-mms/tmobile-digits/android/att-files";
my $BACKUP_DIGITS_ATT_FILES_REPO_DIR = "$BACKUP_DIGITS_ATT_FILES_BASE_DIR/repo";

my $USAGE = "Usage:
  $0 -h | --help
    show this message

  $0
    backup messages_repository.db from app data dir
    backup media files from user data dir
";

sub main(@){
  while(@_ > 0){
    my $arg = shift;
    if($arg =~ /^-h|--help$/){
      print $USAGE;
      exit 0;
    }else{
      die "$USAGE\nERROR: unknown arg $arg\n";
    }
  }

  if(not ipmagicTest $IPMAGIC_NAME, $USER, "-f", $REMOTE_DIGITS_DB_FILE){
    print STDERR "\n\n\n!!!!! SKIPPING T-MOBILE DIGITS BACKUP\n\n\n";
    print "WARNING: $REMOTE_DIGITS_DB_FILE does not exist\n";
    exit 0;
  }

  runQuiet "mkdir", "-p", $BACKUP_DIGITS_DB_DIR;

  my $nowMillis = nowMillis();
  my $dtm = `date +%Y-%m-%d_%H%M%S`;
  chomp $dtm;

  print "\n\nfetch sqlite DB\n";
  my $tmpDbFile = "/tmp/backup-tmobile-digits-$nowMillis.db";
  runRetry 30, "ipmagic", $IPMAGIC_NAME, "-u", "root",
    "sqlite3 $REMOTE_DIGITS_DB_FILE 'vacuum into \"$tmpDbFile\"'"
  ;

  my $db = "$BACKUP_DIGITS_DB_DIR/${dtm}_${nowMillis}_cdigits3x.sqlite";
  runRetry 30, "ipmagic", $IPMAGIC_NAME, "-u", "root", "--rsync", "-avP", ":$tmpDbFile", $db;

  runRetry 5, "ipmagic", $IPMAGIC_NAME, "-u", "root", "rm \"$tmpDbFile\"";


  print "\n\ncopy previous repo files to new atts dir to speedup remote rsync\n";
  my $attsDir = "$BACKUP_DIGITS_ATT_FILES_BASE_DIR/${dtm}_${nowMillis}";

  my @prevRepoAttFiles = glob "$BACKUP_DIGITS_ATT_FILES_REPO_DIR/*";
  @prevRepoAttFiles = sort {mtime($a) <=> mtime($b)} @prevRepoAttFiles;

  for my $file(@prevRepoAttFiles){
    if($file =~ /^(?:.*\/)?(.*)-([0-9a-f]{32})$/){
      my $relFile = $1;
      $relFile =~ s/%/\//g;
      my $relDir = $relFile;
      $relDir =~ s/\/[^\/]*$//;
      my $destDir = "$attsDir/$relDir";
      my $destFile = "$attsDir/$relFile";
      runQuiet "mkdir", "-p", $destDir;
      runQuiet "cp", "-ar", "--reflink=auto", $file, $destFile;
    }
  }


  print "\n\nsilently delete previous repo files from new atts dir that are not on remote\n";
  runRetry 30, "ipmagic", $IPMAGIC_NAME, "-u", "root", "--rsync", "-r", "--del",
    "--ignore-non-existing", "--ignore-existing",
    ":$REMOTE_DIGITS_ATT_FILES_DIR/", $attsDir;


  print "\n\nfetch new digits att files\n";
  runRetry 300, "ipmagic", $IPMAGIC_NAME, "-u", "root", "--rsync", "-avP", "--del", ":$REMOTE_DIGITS_ATT_FILES_DIR/", $attsDir;


  print "\n\nprepare att files with md5 filename for repo\n";
  my @files = `find $attsDir -type f`;
  chomp $_ for @files;

  my $fileIdNames = {};
  for my $file(@files){
    my $relFile = $file;
    $relFile =~ s/^$attsDir\///;

    my $fileIdName = getFileIdName($relFile, md5($file));
    $$fileIdNames{$file} = $fileIdName;
  }

  my $tmpBoingFilesDir = "/tmp/backup-tmobile-digits-att-files-$nowMillis";
  runQuiet "mkdir", "-p", $tmpBoingFilesDir;

  for my $file(@files){
    my $fileIdName = $$fileIdNames{$file};
    runQuiet "cp", "-ar", $file, "$tmpBoingFilesDir/$fileIdName";
  }


  print "\n\nadd att files to repo\n";
  run "rsync", "-avP", "$tmpBoingFilesDir/", "$BACKUP_DIGITS_ATT_FILES_REPO_DIR/";

  run "rm", "-r", "$tmpBoingFilesDir/";


  print "\n\nreplace att files with symlinks to repo\n";
  for my $file(@files){
    my $fileIdName = $$fileIdNames{$file};
    my $repoFile = "$BACKUP_DIGITS_ATT_FILES_REPO_DIR/$fileIdName";

    if(not -e $repoFile){
      die "ERROR: missing repo file after rsync \"$repoFile\"\n";
    }

    runQuiet "rm", $file;
    runQuiet "ln", "-s", $repoFile, $file;
    runQuiet "touch", "-h", "-r", $repoFile, $file;
  }


  print "\n\nupdate git repo\n";
  runQuiet "cd $BACKUP_DIGITS_ATT_FILES_REPO_DIR && git add -A && "
   . "( git commit -m 'automatic commit' || echo no commit created )";
}

sub getFileIdName($$){
  my ($relFile, $md5) = @_;

  my $boingFile = $relFile;
  $boingFile =~ s/^\/+//;
  $boingFile =~ s/\/+/%/g;

  return "${boingFile}-${md5}";
}

&main(@ARGV);
