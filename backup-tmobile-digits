#!/usr/bin/perl
use strict;
use warnings;
use Time::HiRes qw(time);

my $IPMAGIC_NAME = "sx";
my $USER = "nemo";

sub getFileIdName($$);
sub md5($);
sub mtime($);
sub nowMillis();
sub run(@);
sub runQuiet(@);

my $REMOTE_DIGITS_DB_FILE = "/home/.android/data/data/com.tmobile.digits/databases/cDigits3x.db";
my $REMOTE_DIGITS_ATT_FILES_DIR = "/home/$USER/android_storage/Android/data/com.tmobile.digits/files/DIGITS/.Media";

my $BACKUP_DIGITS_DB_DIR = "$ENV{HOME}/Code/sx/backup/backup-mms/tmobile-digits/android/db";
my $BACKUP_DIGITS_ATT_FILES_BASE_DIR = "$ENV{HOME}/Code/sx/backup/backup-mms/tmobile-digits/android/att-files";
my $BACKUP_DIGITS_ATT_FILES_REPO_DIR = "$BACKUP_DIGITS_ATT_FILES_BASE_DIR/repo";

my $USAGE = "Usage:
  $0 -h | --help
    show this message

  $0
    backup messages_repository.db from app data dir
    backup media files from user data dir
";

sub main(@){
  while(@_ > 0){
    my $arg = shift;
    if($arg =~ /^-h|--help$/){
      print $USAGE;
      exit 0;
    }else{
      die "$USAGE\nERROR: unknown arg $arg\n";
    }
  }
  runQuiet "mkdir", "-p", $BACKUP_DIGITS_DB_DIR;
  my $host = `ipmagic $IPMAGIC_NAME`;
  chomp $host;

  my $nowMillis = nowMillis();
  my $dtm = `date +%Y-%m-%d_%H%M%S`;
  chomp $dtm;

  print "\n\nfetch sqlite DB\n";
  my $tmpDbFile = "/tmp/backup-tmobile-digits-$nowMillis.db";
  run "ipmagic", $IPMAGIC_NAME, "-u", "root",
    "sqlite3 $REMOTE_DIGITS_DB_FILE 'vacuum into \"$tmpDbFile\"'"
  ;

  my $db = "$BACKUP_DIGITS_DB_DIR/${dtm}_${nowMillis}_cdigits3x.sqlite";
  run "rsync", "-avP", "root\@$host:$tmpDbFile", $db;

  run "ipmagic", $IPMAGIC_NAME, "-u", "root", "rm \"$tmpDbFile\"";


  print "\n\ncopy previous repo files to new atts dir to speedup remote rsync\n";
  my $attsDir = "$BACKUP_DIGITS_ATT_FILES_BASE_DIR/${dtm}_${nowMillis}";

  my @prevRepoAttFiles = glob "$BACKUP_DIGITS_ATT_FILES_REPO_DIR/*";
  @prevRepoAttFiles = sort {mtime($a) <=> mtime($b)} @prevRepoAttFiles;

  for my $file(@prevRepoAttFiles){
    if($file =~ /^(?:.*\/)?(.*)-([0-9a-f]{32})$/){
      my $relFile = $1;
      $relFile =~ s/%/\//g;
      my $relDir = $relFile;
      $relDir =~ s/\/[^\/]*$//;
      my $destDir = "$attsDir/$relDir";
      my $destFile = "$attsDir/$relFile";
      runQuiet "mkdir", "-p", $destDir;
      runQuiet "cp", "-ar", "--reflink=auto", $file, $destFile;
    }
  }


  print "\n\nsilently delete previous repo files from new atts dir that are not on remote\n";
  run "rsync", "-r", "--del",
    "--ignore-non-existing", "--ignore-existing",
    "$USER\@$host:$REMOTE_DIGITS_ATT_FILES_DIR/", $attsDir;


  print "\n\nfetch new digits att files\n";
  run "rsync", "-avP", "--del", "$USER\@$host:$REMOTE_DIGITS_ATT_FILES_DIR/", $attsDir;


  print "\n\nprepare att file md5 filenames, add att files to repo, and replace att files with symlinks to repo\n";
  my @files = `find $attsDir -type f`;
  for my $file(@files){
    chomp $file;

    my $relFile = $file;
    $relFile =~ s/^$attsDir\///;

    my $fileIdName = getFileIdName($relFile, md5($file));
    my $dest = "$BACKUP_DIGITS_ATT_FILES_REPO_DIR/$fileIdName";

    if(not -e $dest){
      print "adding $dest\n";
    }
    runQuiet "cp", "-ar", $file, $dest;

    runQuiet "rm", $file;
    runQuiet "ln", "-s", $dest, $file;
    runQuiet "touch", "-h", "-r", $dest, $file;
  }


  print "\n\nupdate git repo\n";
  runQuiet "cd $BACKUP_DIGITS_ATT_FILES_REPO_DIR && git add -A && "
   . "( git commit -m 'automatic commit' || echo no commit created )";
}

sub getFileIdName($$){
  my ($relFile, $md5) = @_;

  my $boingFile = $relFile;
  $boingFile =~ s/^\/+//;
  $boingFile =~ s/\/+/%/g;

  return "${boingFile}-${md5}";
}

sub md5($){
  my ($file) = @_;
  die "ERROR: could not find file $file\n" if not -e $file;
  my $md5 = `md5sum "$file"`;
  if($md5 =~ /^([0-9a-f]{32})\s/){
    return $1;
  }else{
    die "ERROR: could not md5sum file $file\n";
  }
}

sub mtime($){
  my ($file) = @_;
  my @stat = stat $file;
  return $stat[9];
}

sub nowMillis(){
  return int(time * 1000.0 + 0.5);
}

sub run(@){
  print "@_\n";
  runQuiet(@_);
}
sub runQuiet(@){
  system @_;
  if($? != 0){
    die "ERROR: \"@_\" failed\n$!\n";
  }
}

&main(@ARGV);
